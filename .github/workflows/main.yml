name: Java CI with Maven
on: 
  push: 
   branches: ["main"]
env:
 IMAGE_NAME: "spring-maven-app"
 DOCKER_USERNAME: "rajimohan19"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SCM
        uses: actions/checkout@v4
      - name: list workspace contents
        run: ls -al ${{ github.workspace }}
      - name: Setup Java and Maven
        uses: actions/setup-java@v4
        with:
         distribution: 'temurin'
         java-version: '17'
      - name: Check Java and MVN java-version
        run: |
         java --version
         mvn --version
      - name: package the application
        run: |
         mvn -B package
         ls -al ${{ github.workspace }}/target
      - name: Upload the jar file
        uses: actions/upload-artifact@v4
        with:
         name: jar-file
         path: target/*.jar
         if-no-files-found: 'error'
         retention-days: 1 day
  dockerize:
    needs: build
    runs-on: ubuntu-latest
    steps: 
     - name: Download the jar file
       uses: actions/download-artifact@v4
       with: 
        name: jar-file
        path: target
     - name: Check the jar file
       run: ls -al ${{ github.workspace }}/target/*.jar
     - name: Dockerize the application
       run: docker build -t ${{ env.DOCKERHUB_USERNAME }}${{ env.IMAGE_NAME }}:${{ github.run_number }} .
     - name: Save the application as tar file
       run: docker save ${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.run_number }} > ${{ github.workspace }}/${{ env.IMAGE_NAME }}.tar
     - name: Upload the image tar file
       uses: actions/upload-artifact@v4
       with:
         name: tar-file
         path: ${{ github.workspace }}/${{ env.IMAGE_NAME }}.tar
         if-no-files-found: 'error'
         retention-days: 1 day 
  upload_to_Dockerhub: 
    needs: dockerize
    runs-on: ubuntu-latest
    steps: 
     - name: Download the tar file
       uses: actions/download-artifact@v4
       with: 
        name: tar-file
     - name: load images from tar file
       run: docker load < ${{ github.workspace }}/${{ env.IMAGE_NAME }}.tar
     - name: Login to Docker Hub
       uses: docker/login-action@v3
       with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: push the image
       run: docker run ${{ env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME }}:${{ github.run_number }}
